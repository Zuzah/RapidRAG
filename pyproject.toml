[tool.ruff]
# Increase the line length. This breaks PEP8 but it is way easier to work with.
# The original reason for this limit was a standard vim terminal is only 79 characters,
# but this doesn't really apply anymore.
line-length = 119
# Target Python 3.12. If you decide to use a different version of Python
# you will need to update this value.
target-version = "py312"
# Automatically fix auto-fixable issues.
fix = true
# The directory containing the source code. If you choose a different project layout
# you will need to update this value.
src = ["article_overload"]

[tool.ruff.lint]
# Enable all linting rules.
select = ["ALL"]
# Ignore some of the most obnoxious linting errors.
ignore = [
    # Missing docstrings.
    "D100",
    "D104",
    "D105",
    "D106",
    "D107",
    # Docstring whitespace.
    "D203",
    "D213",
    # Docstring punctuation.
    "D415",
    # Docstring quotes.
    "D301",
    # Builtins.
    "A",
    # Print statements.
    "T20",
    # TODOs.
    "TD002",
    "TD003",
    "FIX",
    # Annotations.
    "ANN101",
    "ANN102",
    # Assert error.
    "S101",
    # Copyright warning message
    "CPY001",
    # Pytest decorator conflictd with formatter
    "PT023",
    "PT001",
    # Recommended ignores
    "COM812",
    "ISC001",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
    # Undocumented public function (not needed for unit tests)
    "D103",
    # Missing docstrings.
    "D100",
    "D104",
    "D105",
    "D106",
    "D107",
    # Docstring whitespace.
    "D203",
    "D213",
    # Docstring punctuation.
    "D415",
    # Docstring quotes.
    "D301",
    # Builtins.
    "A",
    # Print statements.
    "T20",
    # TODOs.
    "TD002",
    "TD003",
    "FIX",
    # Annotations.
    "ANN101",
    "ANN102",
    # Assert error.
    "S101",
    # Line too long warning in unit tests
    "E501",
    "SLF001",
]

[tool.poetry]
name = "rapidrag"
version = "0.1.0"
description = ""
authors = ["Zuzah <murtaza.hasni@gmail.com>"]
readme = "README.md"
packages = [
    { include = "app" }
]
package-mode = false

[tool.poetry.dependencies]
python = "3.12.3"
fastapi = {extras = ["all"], version = "^0.115.0"}
certifi = "^2024.8.30"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
